.IconButton {
    --button-font-size: 1rem;

    --button-normal-color: hsl(204, 85%, 40%);
    --button-hover-color: hsl(204, 85%, 35%);
    --button-active-color: hsl(204, 85%, 30%);

    --button-normal-color-light: hsl(204, 85%, 96%);
    --button-hover-color-light: hsl(204, 85%, 93%);

    display: inline-flex;

    border: none;
    cursor: pointer;
    -webkit-tap-highlight-color: transparent;

    /* For the icon inside */
    justify-content: center;
    align-items: center;

    padding: 0.2em;

    color: var(--button-normal-color);
    background-color: transparent;
    /* background-clip: padding-box; */

    cursor: pointer;
    user-select: none;

    /* border: 1px solid transparent; */
    /* border-radius: 50%; */

    /* For pseudo elements */
    position: relative;

    font-size: var(--button-font-size);
}
/*
For after click animation

::before is for background
::after is for border

Not doing this on the element it self is
because it's impossible to do transition/animation only on switching state away from :active
*/
.IconButton::before,
.IconButton::after {
    content: "";

    position: absolute;
    inset: 0;

    background-color: transparent;
    /* background-clip: padding-box; */

    border: 1px solid transparent;
    border-radius: inherit;

    /* Desktop web YouTube */
    transition: background-color ease-out 0.1s, border-color ease-in-out 0.4s;
    /* Android YouTube app (1/6s, 1/3s) */
    /* transition: background-color 0.17s, border-color 0.33s; */
}
.IconButton:active::before,
.IconButton.ontouch::before,
.IconButton:active::after,
.IconButton.ontouch::after {
    transition: none;
}
.IconButton:active::before,
.IconButton.ontouch::before {
    background-color: rgba(0, 0, 0, 0.1);
}
.IconButton:active::after,
.IconButton.ontouch::after {
    opacity: 0;
    border-color: rgba(0, 0, 0, 0.2);
}
@media (hover: hover) {
    .IconButton:hover {
        color: var(--button-hover-color);
        background-color: rgba(0, 0, 0, 0.1);
    }
}
.IconButton:active,
.IconButton.ontouch {
    color: var(--button-active-color);
}
